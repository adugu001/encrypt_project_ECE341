functionProcess: process------------------------------------------------------------------------------------------------------------------------------
variable testdata : std_logic_vector(0 to 127);
variable data : std_logic_vector(0 to 127) :=   	"00011001"&"00111101"&"11100011"&"10111110"&  --NIST.FIPS.197-upd1::pg34::round #1 
					                                "10100000"&"11110100"&"11100010"&"00101011"&
													"10011010"&"11000110"&"10001101"&"00101010"&
													"11101001"&"11111000"&"01001000"&"00001000";
variable afterSub : std_logic_vector(0 to 127) :=   "11010100"&"00100111"&"00010001"&"10101110"&
					                                "11100000"&"10111111"&"10011000"&"11110001"&
													"10111000"&"10110100"&"01011101"&"11100101"&
													"00011110"&"01000001"&"01010010"&"00110000";														
variable afterShift : std_logic_vector(0 to 127) := "11010100"&"10111111"&"01011101"&"00110000"&
					                                "11100000"&"10110100"&"01010010"&"10101110"&
													"10111000"&"01000001"&"00010001"&"11110001"&
													"00011110"&"00100111"&"10011000"&"11100101"; 																									   
variable aftermix : std_logic_vector(0 to 127) := 	"00000100"&"01100110"&"10000001"&"11100101"&
												    "11100000"&"11001011"&"00011001"&"10011010"&
												    "01001000"&"11111000"&"11010011"&"01111010"&
												    "00101000"&"00000110"&"00100110"&"01001100";
											
begin 	
	--encrypt op 
		encrypt <= '0';
		
		testData := sbox(data, '0');
		a1 <= data;--1ns, erratic at 50 ns
		for i in 0 to 3 loop
			wait for 1 ns;		  
		end loop;		  
		assert testdata = b1 report "sbox failed";
		
		testData := shiftRows(aftersub, '0');  --1ns
		a2 <= afterSub;
		wait for 1 ns;		  
		assert testdata = b2 report "shiftRow failed";
		
		testData := mixColumns(aftershift, '0'); --4ns
		a3 <= aftershift;
		for i in 0 to 3 loop
			wait for 1 ns;		  
		end loop;
		assert testdata = b3 report "mixcol failed";
		
		--decrypt op 
		encrypt <= '1';
		
		testData := mixColumns(aftermix, '1');	--4
		a3 <= afterMix;
		for i in 0 to 3 loop
			wait for 1 ns;		  
		end loop;
		assert testdata = b3 report "inv mixcol failed";
		
		testData := shiftRows(aftershift, '1');
		a2 <= aftershift;
		wait for 1ns;
		assert testdata = b2 report "inv shiftRows failed";
		
		testData := sbox(afterSub, '1');	 --1
		a1 <= afterSub; 
		wait for 1ns;
		assert testdata = b1 report "inv sbox failed";

		
		
		wait;
end process functionProcess;